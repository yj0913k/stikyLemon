var ari_config={
    tag:"https://a.audrte.com/ptrack?arlocation=115.88.35.206&p=M1353665098",
    baseuri:"audrte.com",
    cookiehook:"arcki2",
   };
window.onload = function (){

    var Base64 = {
        characters: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" ,

        encode: function( string )
        {
            var characters = Base64.characters;
            var result     = '';

            var i = 0;
            do {
                var a = string.charCodeAt(i++);
                var b = string.charCodeAt(i++);
                var c = string.charCodeAt(i++);

                a = a ? a : 0;
                b = b ? b : 0;
                c = c ? c : 0;

                var b1 = ( a >> 2 ) & 0x3F;
                var b2 = ( ( a & 0x3 ) << 4 ) | ( ( b >> 4 ) & 0xF );
                var b3 = ( ( b & 0xF ) << 2 ) | ( ( c >> 6 ) & 0x3 );
                var b4 = c & 0x3F;

                if( ! b ) {
                    b3 = b4 = 64;
                } else if( ! c ) {
                    b4 = 64;
                }

                result += Base64.characters.charAt( b1 ) + Base64.characters.charAt( b2 ) + Base64.characters.charAt( b3 ) + Base64.characters.charAt( b4 );

            } while ( i < string.length );

            return result;
        } ,

        decode: function( string )
        {
            var characters = Base64.characters;
            var result     = '';

            var i = 0;
            do {
                var b1 = Base64.characters.indexOf( string.charAt(i++) );
                var b2 = Base64.characters.indexOf( string.charAt(i++) );
                var b3 = Base64.characters.indexOf( string.charAt(i++) );
                var b4 = Base64.characters.indexOf( string.charAt(i++) );

                var a = ( ( b1 & 0x3F ) << 2 ) | ( ( b2 >> 4 ) & 0x3 );
                var b = ( ( b2 & 0xF  ) << 4 ) | ( ( b3 >> 2 ) & 0xF );
                var c = ( ( b3 & 0x3  ) << 6 ) | ( b4 & 0x3F );

                result += String.fromCharCode(a) + (b?String.fromCharCode(b):'') + (c?String.fromCharCode(c):'');

            } while( i < string.length );

            return result;
        }
    }

    function isBlank(str) {
        return (!str || /^\s*$/.test(str));
    }

    function isEmpty(str) {
        return (!str || 0 === str.length);
    }


    function createCORSRequest(method, url) {
        var xhr = new XMLHttpRequest();
        if ("withCredentials" in xhr) {
            xhr.open(method, url, true);
        } else if (typeof XDomainRequest !== "undefined") {
            xhr = new XDomainRequest();
            xhr.open(method, url);
        } else {
            xhr = null;
        }
        return xhr;
    }

    function doRequest(url, callback) {
        var xhr;
        xhr = createCORSRequest("GET", url);
        xhr.withCredentials = true;
        xhr.onreadystatechange = function () {
            console.log(xhr.status);
            if (xhr.readyState === 4 && xhr.status === 200) {callback(xhr.responseText);}
        };
        xhr.send();
    }

    function Ari(){
        var dmpspixelcalls = '';
        var date=new Date();
        var concatChar="_";

       this.init = function (consentString, gdprApplies, tcfVersion){

            var base = ari_config.tag.substring(0, ari_config.length);

            var tagUri=base+"&artime="+date.toISOString();

            var uri = window.location.href.replace("http://","").replace("https://","").replace("/?", "?");

            tagUri+="&arlocation="+Base64.encode(uri);
            tagUri+="&gdpr="+gdprApplies;
            tagUri+="&gdpr_consent="+consentString;
            tagUri+="&gdpr_version="+tcfVersion;

            if(!isEmpty(document.referrer) && !isBlank(document.referrer))
            {
                var ref = document.referrer.replace("http://","").replace("https://","").replace("/?", "?");
                tagUri+="&arreferer="+Base64.encode(ref);
            }


            doRequest(tagUri,function (stringResponse){
                console.log("arResponse->"+stringResponse);
                var arResponse=JSON.parse(stringResponse);
                dmpspixelcalls=arResponse["pxcalls"];
                if(dmpspixelcalls!==undefined) {
                    dmpspixelcalls.split('|').forEach(function (url) {
                        var img = document.createElement('img');
                        img.className = "arpixel"
                        img.src = url;
                        img.setAttribute("style", "display: none;");
                        document.body.appendChild(img);
                    });
                }
            })
       };
    }
    var ar = new Ari();

    // TCF2.0
    if (typeof __tcfapi === "function") {
        __tcfapi('getTCData', 2, (tcData, success) =>{
            ar = new Ari();
            console.log("TCF2.0:"+tcData.tcString)
            console.log("TCF2.0:"+tcData.gdprApplies)
            ar.init(tcData.tcString, tcData.gdprApplies ? 1 : 0, 1);
        });
    }
    // TCF1.X
    else if(typeof __cmp === "function")
    {
        __cmp("getConsentData",null, (tcData, success) =>{
            ar = new Ari();
            console.log("TCF1.X:"+tcData.consentData)
            console.log("TCF1.X:"+tcData.gdprApplies)
            ar.init(tcData.consentData, tcData.gdprApplies ? 1 : 0, 2);
        });
    }
    else
    {
       ar = new Ari();
       ar.init(null, 0, 1);
    }
};



